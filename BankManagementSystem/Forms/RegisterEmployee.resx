<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAJgJAACYCQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADWzhwA1s4cUNbOH1DWzh/81s4f/NbOH/zWzh/81s4f/NbOH/zWz
        h/81s4f/NbOH/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANbOHADWzhxQ1s4fUNbOH/zW0iP81s4f/NbOH/zWz
        h/81s4f/NbOH/zWzh/81s4f/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1s4cANbOHFDWzh9Q0sIT/Mqt//zWy
        hv81s4f/NbOH/zWzh/81s4f/NbOH/zWzh/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADWzhwA1s4cUNbOH1DKs
        gP8toXX/NLKG/zWzh/81s4f/NbOH/zWzh/81s4f/NbOH/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANLOGADSz
        hhQ0s4bUNLOF/zSyhP80s4b/NLOG/zSzhv80s4b/NLOF/zSzhf80s4X/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABrtN4AbbThJl+0yt5dtMf+XbTI/V20yP1dtMj9XbTI/V20yP1ctMf8XLTG/Fy0xvwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAf7X/AHu1/wB/tf+GgLX//4C1//+Atf//gLX//4C1//+Atf//gLX//4C1//+Atf//gLX//wAA
        AAAAAAAAAAAAAAAAAAA6St4AOkreADpK3gI6St4AOkreAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAB/tf8Af7X/H3+1/9t/tf//f7X//3+1//9/tf//f7X//3+1//9/tf//f7X//3+1
        //9/tf//AAAAAAAAAAAAAAAAOkreADpK3go6St5pOkreqTpK3oM6St43OkreCTpK3gA6St4AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH+1/wB/tf9Of7X/+n+1//9/tf//f7X//3+1//9/tf//f7X//3+1
        //9/tf//f7X//3+1//8AAAAAAAAAADpK3gA6St4AOkreYjpK3vg6St7/Okre/zpK3u46St61OkreYzpK
        3h86St4COkreAAAAAAAAAAAAAAAAAAAAAAAAAAAAf7X/AH+1/21/tf//f7X//3+1//9/tf//f7X//3+1
        //9/tf//f7X//3+1//9/tf//f7X//wAAAAAAAAAAOkreADpK3gw6St68Okre/zpK3v86St7/Okre/zpK
        3v86St78Okre2zpK3pU6St5EOkreDjpK3gA6St4AAAAAAAAAAAB/tf8Af7X/bn+1//9/tf//f7X//3+1
        //9/tf//f7X//3+1//9/tf//f7X//3+1//9/tf//AAAAAAAAAAA6St8AOkrhPzpK3/E6St7/Okre/zpK
        3v86St7/Okre/zpK3v86St7/Okre/zpK3vQ6St7COkreczpK3io6St4FOkreAH+1/wB/tf9Tf7X/+3+1
        //9/tf//f7X//3+1//9/tf//f7X//3+1//9/tf//f7X//3+1//8AAAAAMEeFAAAAAAA2SbmPOUrT/zpK
        3v86St//Okre/zpK3v86St7/Okre/zpK3v86St7/Okre/zpK3v86St7+Okre5TpK3qQ6St5SMj3aE4C3
        /yR/tv/ff7X//3+1//9/tf//f7X//3+1//9/tf//f7X//3+1//9/tf//f7X//wAAAAAuR3wALkd8HS5H
        e9gwR4j/M0im/zdJxv85Str/Okrg/zpK3/86St7/Okre/zpK3v86St7/Okre/zpK3v86St7/Okre/zpK
        3vk6St7PO0zfhXam+sJ/tv//f7X//3+1//9/tf//f7X//32z/f91qvb/fLL8/3+1//9/tf//GTibAC5I
        dwAtR3tfLUd4/C1Hd/8tR3f/Lkd+/zFIk/80SLT/OEnQ/zlK3f85St//OUrf/zlK3/85St//OUrf/zlK
        3/85St//OUrf/zpJ3f9NZ+f+eKr8+3+2//9/tf//f7X//3+1//99s/3/c6j0/3Sp9f9+tP7/f7X//3+1
        ///Pl0Ia0JdCb6CAUtKLdlj/jHZY/4x0V/+Kb1X/iW9T/4pvVf+LcGL/jnB4/45wfv+OcH7/jnB+/45w
        fv+OcH7/jnB+/45wfv+PcHv/gHun/3en9/+Atv//f7X//3+1//9/tf//frT+/3Oo9f9ypvT/frT+/3+1
        //9/tf//f7X//8+XQrHPl0L90ZhB/9KYQf/SmEH/0phB/86RPv/Kizz/yos8/8qLO//Jizr/yYs6/8mL
        Ov/Jizr/yYs6/8mLOv/Jizr/yos4/72TXP+Prtj/f7b//3+1//9/tf//f7X//362//+Mq9f/bH3J/0tm
        5/9okPT/frT//3+1//9/tf//z5dC+c+XQv/Pl0L/z5dC/8+XQv/Pl0L/z5dC/8uQP//Hij3/x4o9/8eK
        Pf/Hij3/x4k8/8eJPP/Hij3/x4o9/8iKO/+9kFj/kKvS/362//9/tf//f7X//3+1//9+tv//jqzV/7yS
        XP99Z4//N0fg/z9S4f9wnfj/gLb//3+1///Pl0L/z5dC/8+eSf/PoEv/z5tG/8+XQv/Pl0L/z5dC/8uQ
        P//Hij3/x4o9/8eLPv/JlEX/ypdH/8iPQf/Hijz/wY5P/5SpyP9+tv//f7X//3+1//9/tf//frb//46s
        1f+7kV7/yoo4/4Fqjf84SeD/Okre/2WN8/+At///f7X//c+XQv/PmEP/z6dR/8+sVv/PoEv/z5dC/8+X
        Qv/Pl0L/z5dC/8uQP//Hij3/x4w+/8yiT//NqVT/yZZG/8iJOv+nnZT/f7X//3+1//9/tf//f7X//362
        //+OrNX/u5Fe/8iJO//Jizv/gGqO/zhJ4P8/UeD/cZ/4/4C2//9/tf/nz5dC/8+XQv/PmEP/z5hD/8+X
        Qv/Pl0L/z5dC/8+XQv/Pl0L/z5dC/8uQP//Hij3/x4w+/8eMPv/Hiz3/yIo8/56jqv9+tv//f7X//3+1
        //9+tv//jqzV/7uRXv/IiTv/x4o9/8mLO/+Bao7/N0fh/05p6P99sv7/f7X//3+1/6TPl0L/z5dC/8+Z
        RP/PmkX/z5hD/8+YQ//PmkX/z5lE/8+YQ//PmkX/z5lF/8uRQP/IjT//yI5A/8eMPv/IiTv/sZd4/4Oz
        8/9+tv//frb//4+s1f+7kV7/yIk7/8eKPf/Hij3/yYs7/35pff83SdD/ZIzx/4C3//9/tf/jf7X/PM+X
        Qv/PmEP/z6dS/8+tV//PoEv/z6FM/8+uWP/PplD/z5xH/8+sVv/Pq1X/z5tG/86nUv/Nq1b/yZZG/8eJ
        PP/GikD/sJh8/5qltv+hoaT/vZBY/8iKO//Hij3/x4o9/8eKPf/Jizz/emha/zhVlv92qPP/gLb/9H+1
        /2p/tf8Bz5dC/8+XQv/Pm0b/z51H/8+ZRP/PmkT/z51H/8+bRf/PmEP/z51H/8+cR//PmEP/z5xH/8yZ
        Rv/IjkD/x4o9/8eKPf/IiTv/x4o9/8eKPP/Iijz/x4o9/8eKPf/Hij3/x4o9/8mLPP95Z1n/TXOx/3+1
        /vR/tf91f7X/BX+1/wDPl0L/z5dC/9CXQf/Ol0L/zpdD/8+XQv/Ql0H/z5dC/8+XQv/Pl0L/z5dC/8+X
        Qv/Pl0L/z5ZC/8uQP//Hij3/x4o9/8eKPf/Hij3/x4o9/8eKPf/Hij3/x4o9/8eKPf/Hij3/yYs8/35t
        Yf9mldr0grj/dX+1/wV/tf8AAAAAAM+XQv/Pl0L/lqKF/2iruv9oqrn/aau4/6SfdP/Ql0H/z5dC/8+X
        Qv/Pl0L/z5dC/8+XQv/Pl0L/z5dC/8uQP//Hij3/x4o9/8eKPf/Hij3/x4o9/8eKPf/Hij3/x4o9/8eK
        Pf/Iijv/joB19HCl8HWOyf8Ff7X/AAAAAAAAAAAAz5dC/8qYSP9XqM3/KbD//yu0//8or///bqWz/9CX
        Qf/Pl0L/z5dC/8+XQv/Pl0L/z5dC/8+XQv/Pl0L/z5dC/8uQP//Hij3/x4o9/8eKPf/Hij3/x4o9/8eK
        Pf/Hij3/x4o9/8eKPf+2i1ibQsP/BX+1+AAAAAAAAAAAAAAAAADPl0L/yZZJ/1aJz/8sj///Lqz9/yuK
        //9tjLT/z5dC/8+XQv/Pl0L/z5dC/8+XQv/Pl0L/z5dC/8+XQv/Pl0L/z5hD/8uRQP/IjT//x4s+/8iM
        Pv/HjD7/x4s+/8iMPv/Hij3/x4o9/8eKPX/Hij0AAAAAAAAAAAAAAAAAAAAAAM+XQv/KmEj/VqXO/ymt
        //8rs///KKz//22itP/Ql0H/z5dC/8+XQv/Pl0L/z5dC/8+XQv/Pl0L/z5dC/8+aRf/PqlT/z5xH/86m
        Uf/Jlkb/y51M/8ucS//Kl0f/zKJP/8eLPv/Hij3/x4o9f8eKPQAAAAAAAAAAAAAAAAAAAAAAz5dC/s6X
        Q/+MpJD/Wq3K/1utyf9crcj/m6F+/9CXQf/Pl0L/z5dC/8+XQv/Pl0L/z5dC/8+XQv/Pl0L/z5lE/8+n
        Uf/PnEb/z6ZQ/8uZRv/Lm0r/yppJ/8mWRv/Ln03/x4s9/8eKPf/Hij1/x4o9AAAAAAAAAAAAAAAAAAAA
        AADPl0Laz5dC/8+XQv/LmEf/y5hH/8yYRv/Pl0L/z5dC/8+XQv/Pl0L/z5dC/8+XQv/Pl0L/z5dC/8+X
        Qv/Pl0L/z5hD/8+XQv/PmEP/z5dC/8uRQP/Hiz7/x4o9/8eLPv/Hij3/x4o9+seKPVzHij0AAAAAAAAA
        AAAAAAAAAAAAAM+XQlTPl0LXz5dC+s+XQvrPl0L6z5dC+s+XQvrPl0L6z5dC+s+XQvrPl0L6z5dC+s+X
        QvrPl0L6z5dC+s+XQvrPl0L6z5dC+s+XQvrPl0L6z5ZC+sqPP/rHij38x4o9/ceKPfXHij2ex4s9EceL
        PQAAAAAAAAAAAAAAAAAAAAAA///4AP//+AD///gA///4AP//+AD///gA///4AP3/8ADwP/AA8AfwAOAB
        8ADgADAA4AAAAMAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAA
        AAcAAAAPAAAAHwAAAB8AAAAfAAAAHwAAAB8=
</value>
  </data>
</root>